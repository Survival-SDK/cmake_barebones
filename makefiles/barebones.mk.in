BB_PREFIX=@BB_PREFIX@

ifdef nowerror
	BB_WERROR_OPT=-DBB_WERROR=OFF
else
	BB_WERROR_OPT=-DBB_WERROR=ON
endif

BB_CMAKE_DEBUG_OPTS?=-DBB_MORE_WARNINGS=ON $(BB_WERROR_OPT) \
 -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON

ifdef devmode
	BB_CMAKE_RELEASE_DEV_OPTS=$(BB_CMAKE_DEBUG_OPTS)
endif
ifdef onejob
	BB_JOBS_OPT=-j1
else
	BB_JOBS_OPT=-j`nproc --all`
endif
ifndef toolchain
	BB_TOOLCHAIN_OPT=
endif
ifdef toolchain
	ifneq ("$(wildcard $(BB_PREFIX)/lib/cmake/barebones/toolchains/$(toolchain).cmake)","")
		BB_TOOLCHAIN_OPT=-DCMAKE_TOOLCHAIN_FILE=$(BB_PREFIX)/lib/cmake/barebones/toolchains/$(toolchain).cmake
	else
		BB_TOOLCHAIN_OPT=$(toolchain)
	endif
endif
ifdef prefix
	BB_INSTALL_PREFIX_OPT=-DCMAKE_INSTALL_PREFIX=$(prefix)
endif

BB_CMAKE_BUILD_DIR?=cmake_build
BB_CMAKE_RELEASE_OPTS?=
BB_COVERAGE_TARGET?=bb_coverage

bb_all: bb_build_debug

$(BB_CMAKE_BUILD_DIR):
	mkdir $(BB_CMAKE_BUILD_DIR)

bb_refresh_release: $(BB_CMAKE_BUILD_DIR)
	cd $(BB_CMAKE_BUILD_DIR); cmake .. -DBB_MODULE_PATH=$(BB_PREFIX)/lib/cmake \
	 $(BB_TOOLCHAIN_OPT) -DCMAKE_BUILD_TYPE=Release $(BB_CMAKE_RELEASE_OPTS) \
	 $(BB_CMAKE_RELEASE_DEV_OPTS) $(BB_INSTALL_PREFIX_OPT) \
	 $(BB_CMAKE_EXTRA_FLAGS)

bb_refresh_debug: $(BB_CMAKE_BUILD_DIR)
	cd $(BB_CMAKE_BUILD_DIR); cmake .. -DBB_MODULE_PATH=$(BB_PREFIX)/lib/cmake \
	 $(BB_TOOLCHAIN_OPT) -DCMAKE_BUILD_TYPE=Debug $(BB_CMAKE_DEBUG_OPTS) \
	 $(BB_INSTALL_PREFIX_OPT) $(BB_CMAKE_EXTRA_FLAGS)

bb_refresh_coverage: $(BB_CMAKE_BUILD_DIR)
	cd $(BB_CMAKE_BUILD_DIR); cmake .. -DBB_MODULE_PATH=$(BB_PREFIX)/lib/cmake \
	 $(BB_TOOLCHAIN_OPT) -DCMAKE_BUILD_TYPE=Coverage $(BB_CMAKE_DEBUG_OPTS) \
	 -DBB_COVERAGE_TARGET=$(BB_COVERAGE_TARGET) $(BB_CMAKE_EXTRA_FLAGS)

bb_refresh_lint: $(BB_CMAKE_BUILD_DIR)
	cd $(BB_CMAKE_BUILD_DIR); cmake .. -DBB_MODULE_PATH=$(BB_PREFIX)/lib/cmake \
	 $(BB_TOOLCHAIN_OPT) -DCMAKE_BUILD_TYPE=Lint $(BB_CMAKE_DEBUG_OPTS) \
	 $(BB_CMAKE_EXTRA_FLAGS)

bb_refresh_iwyu: $(BB_CMAKE_BUILD_DIR)
	cd $(BB_CMAKE_BUILD_DIR); cmake .. -DBB_MODULE_PATH=$(BB_PREFIX)/lib/cmake \
	 $(BB_TOOLCHAIN_OPT) -DCMAKE_BUILD_TYPE=Iwyu $(BB_CMAKE_DEBUG_OPTS) \
	 $(BB_CMAKE_EXTRA_FLAGS)

bb_build:
	cmake --build $(BB_CMAKE_BUILD_DIR) ${BB_JOBS_OPT}

bb_build_release: bb_refresh_release bb_build

bb_build_debug: bb_refresh_debug bb_build

bb_build_coverage: bb_refresh_coverage bb_build
	cd $(BB_CMAKE_BUILD_DIR); make $(BB_COVERAGE_TARGET)

bb_build_lint: bb_refresh_lint bb_build

bb_build_iwyu: bb_refresh_iwyu bb_build

bb_clean:
	-rm -r -f ./$(BB_CMAKE_BUILD_DIR)

BB_CMAKELINT_FILTER = "-convention/filename, \
	+linelength, \
	-package/consistency, \
	+readability/logic, \
	+readability/mixedcase, \
	+readability/wonkycase, \
	+syntax, \
	+whitespace/eol, \
	-whitespace/extra, \
	+whitespace/indent, \
	+whitespace/mismatch, \
	+whitespace/newline, \
	+whitespace/tabs" \

bb_lint_build:
	make bb_clean
	cmakelint --filter=$(BB_CMAKELINT_FILTER) \
	 `find . -type f \( -name "CMakeLists.txt" -or -name "*.cmake" \)`

bb_install:
	cmake --build $(BB_CMAKE_BUILD_DIR) --target install
